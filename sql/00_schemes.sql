CREATE DATABASE IF NOT EXISTS auth;
-- service
use auth;
CREATE TABLE IF NOT EXISTS t_user (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  openid VARCHAR(24) NOT NULL,
  avatar TEXT NOT NULL,
  username VARCHAR(255) NOT NULL,
  gander VARCHAR(16) NOT NULL DEFAULT 'Unknown',
  email VARCHAR(255) NOT NULL,
  email_verified BOOL NOT NULL DEFAULT true,
  status TINYINT(2) NOT NULL DEFAULT 1,
  registried_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_openid(openid),
  UNIQUE uniq_email(email)
);
CREATE TABLE IF NOT EXISTS t_user_association (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  openid VARCHAR(24) NOT NULL,
  idp_openid VARCHAR(255) NOT NULL,
  idp_type VARCHAR(16) NOT NULL,
  idp_extra JSON,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  INDEX index_openid(openid),
  UNIQUE uniq_open_id_idp_type(openid, idp_type)
);
CREATE TABLE IF NOT EXISTS t_sms_config (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  template_id VARCHAR(32) NOT NULL,
  template TEXT NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_template(template_id)
);
CREATE TABLE IF NOT EXISTS t_challenge_config (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  client_id VARCHAR(24) NOT NULL,
  `name` VARCHAR(32) NOT NULL,
  `type` VARCHAR(32) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  INDEX idx_client(client_id),
  UNIQUE uniq_client_name_type(client_id, name, type)
);
-- https://datatracker.ietf.org/doc/html/rfc2945
CREATE TABLE IF NOT EXISTS t_srp_password (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  identifier VARCHAR(255) NOT NULL,
  verifier VARCHAR(255) NOT NULL,
  salt VARCHAR(32) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_identifier(identifier)
);
CREATE TABLE IF NOT EXISTS t_client (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  client_id VARCHAR(32) NOT NULL,
  name VARCHAR(128) NOT NULL,
  logo text NOT NULL,
  description text,
  client_type TINYINT(2) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_client_id(client_id)
);
CREATE TABLE IF NOT EXISTS t_client_setting (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  client_id VARCHAR(32) NOT NULL,
  callbacks text,
  allowed_origins text,
  allowed_logout_urls text,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_client_id(client_id)
);
CREATE TABLE IF NOT EXISTS t_client_idp_config (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  client_id VARCHAR(32) NOT NULL,
  idp_type VARCHAR(32) NOT NULL,
  idp_client_id VARCHAR(255) NOT NULL,
  idp_client_secret VARCHAR(4096) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  INDEX index_client_id(client_id),
  UNIQUE uniq_idp_type_client_id(client_id, idp_type, idp_client_id)
);
CREATE TABLE IF NOT EXISTS t_server (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  server_id VARCHAR(32) NOT NULL,
  name VARCHAR(128) NOT NULL,
  logo text NOT NULL,
  description text,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_server_id(server_id)
);
CREATE TABLE IF NOT EXISTS t_server_setting (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  server_id VARCHAR(32) NOT NULL,
  allow_offline_access BOOL NOT NULL DEFAULT false,
  token_lifttime BIGINT(20) NOT NULL,
  signing_alg VARCHAR(16) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_server_id(server_id)
);
CREATE TABLE IF NOT EXISTS t_server_scope (
  id BIGINT(22) AUTO_INCREMENT NOT NULL,
  server_id VARCHAR(32) NOT NULL,
  scope VARCHAR(16) NOT NULL,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY(id),
  UNIQUE uniq_server_id_scope(server_id, scope)
);
GRANT ALL PRIVILEGES ON *.* TO 'haauth' @'%';